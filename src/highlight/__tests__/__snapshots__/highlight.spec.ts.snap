// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`highlight should fallback to non highlighted when no match 1`] = `
<test-component
  attribute={[Function String]}
  hit={[Function Object]}
  tagName={[Function String]}
>
  <ais-highlight
    ng-reflect-attribute="name"
    ng-reflect-hit="[object Object]"
  >
    <span
      class="ais-Highlight"
    >
      foo bar
    </span>
  </ais-highlight>
</test-component>
`;

exports[`highlight should highlight nested objects 1`] = `
<test-component
  attribute={[Function String]}
  hit={[Function Object]}
  tagName={[Function String]}
>
  <ais-highlight
    ng-reflect-attribute="parent.name"
    ng-reflect-hit="[object Object]"
  >
    <span
      class="ais-Highlight"
    >
      <em
        class="ais-Highlight-highlighted"
      >
        foo
      </em>
       bar
    </span>
  </ais-highlight>
</test-component>
`;

exports[`highlight should highlight strings 1`] = `
<test-component
  attribute={[Function String]}
  hit={[Function Object]}
  tagName={[Function String]}
>
  <ais-highlight
    ng-reflect-attribute="name"
    ng-reflect-hit="[object Object]"
  >
    <span
      class="ais-Highlight"
    >
      <em
        class="ais-Highlight-highlighted"
      >
        foo
      </em>
       bar
    </span>
  </ais-highlight>
</test-component>
`;

exports[`highlight should highlight values in array 1`] = `
<test-component
  attribute={[Function String]}
  hit={[Function Object]}
  tagName={[Function String]}
>
  <ais-highlight
    ng-reflect-attribute="children[0].name"
    ng-reflect-hit="[object Object]"
  >
    <span
      class="ais-Highlight"
    >
      <em
        class="ais-Highlight-highlighted"
      >
        foo
      </em>
       bar
    </span>
  </ais-highlight>
</test-component>
`;

exports[`highlight should use \`hit.highlighted\` if it exists 1`] = `
<test-component
  attribute={[Function String]}
  hit={[Function Object]}
  tagName={[Function String]}
>
  <ais-highlight
    ng-reflect-attribute="highlighted"
    ng-reflect-hit="[object Object]"
  >
    <span
      class="ais-Highlight"
    >
      <em
        class="ais-Highlight-highlighted"
      >
        foo
      </em>
       bar
    </span>
  </ais-highlight>
</test-component>
`;

exports[`highlight should warn when attribute is not found 1`] = `
<test-component
  attribute={[Function String]}
  hit={[Function Object]}
  tagName={[Function String]}
>
  <ais-highlight
    ng-reflect-attribute="invalid"
    ng-reflect-hit="[object Object]"
  >
    <span
      class="ais-Highlight"
    />
  </ais-highlight>
</test-component>
`;
