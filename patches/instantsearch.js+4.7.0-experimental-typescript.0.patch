diff --git a/node_modules/instantsearch.js/es/connectors/hierarchical-menu/connectHierarchicalMenu.d.ts b/node_modules/instantsearch.js/es/connectors/hierarchical-menu/connectHierarchicalMenu.d.ts
index 0f1b38d..b3266e4 100644
--- a/node_modules/instantsearch.js/es/connectors/hierarchical-menu/connectHierarchicalMenu.d.ts
+++ b/node_modules/instantsearch.js/es/connectors/hierarchical-menu/connectHierarchicalMenu.d.ts
@@ -37,11 +37,11 @@
  * levels deep.
  *
  * @type {Connector}
- * @param {function(HierarchicalMenuRenderingOptions)} renderFn Rendering function for the custom **HierarchicalMenu** widget.
+ * @param {function(HierarchicalMenuRenderingOptions, boolean)} renderFn Rendering function for the custom **HierarchicalMenu** widget.
  * @param {function} unmountFn Unmount function called when the widget is disposed.
  * @return {function(CustomHierarchicalMenuWidgetOptions)} Re-usable widget factory for a custom **HierarchicalMenu** widget.
  */
-export default function connectHierarchicalMenu(renderFn: (arg0: HierarchicalMenuRenderingOptions) => any, unmountFn?: Function): (arg0: CustomHierarchicalMenuWidgetOptions) => any;
+export default function connectHierarchicalMenu(renderFn: (arg0: HierarchicalMenuRenderingOptions, arg1: boolean) => any, unmountFn?: Function): (arg0: CustomHierarchicalMenuWidgetOptions) => any;
 export type HierarchicalMenuItem = {
     /**
      * Value of the menu item.
diff --git a/node_modules/instantsearch.js/es/connectors/stats/connectStats.d.ts b/node_modules/instantsearch.js/es/connectors/stats/connectStats.d.ts
index 8f25c2a..66b54d1 100644
--- a/node_modules/instantsearch.js/es/connectors/stats/connectStats.d.ts
+++ b/node_modules/instantsearch.js/es/connectors/stats/connectStats.d.ts
@@ -8,6 +8,11 @@
  * @property {string} query The query used for the current search.
  * @property {object} widgetParams All original `CustomStatsWidgetOptions` forwarded to the `renderFn`.
  */
+
+/**
+ * @typedef {Object} CustomStatsWidgetOptions
+ */
+
 /**
  * **Stats** connector provides the logic to build a custom widget that will displays
  * search statistics (hits number and processing time).
@@ -15,7 +20,7 @@
  * @type {Connector}
  * @param {function(StatsRenderingOptions, boolean)} renderFn Rendering function for the custom **Stats** widget.
  * @param {function} unmountFn Unmount function called when the widget is disposed.
- * @return {function} Re-usable widget factory for a custom **Stats** widget.
+ * @return {function(CustomStatsWidgetOptions)} Re-usable widget factory for a custom **Stats** widget.
  * @example
  * // custom `renderFn` to render the custom Stats widget
  * function renderFn(StatsRenderingOptions, isFirstRendering) {
@@ -35,7 +40,7 @@
  *   })
  * ]);
  */
-export default function connectStats(renderFn: (arg0: StatsRenderingOptions, arg1: boolean) => any, unmountFn?: Function): Function;
+export default function connectStats(renderFn: (arg0: StatsRenderingOptions, arg1: boolean) => any, unmountFn?: Function): (arg0: any) => any;
 export type StatsRenderingOptions = {
     /**
      * The maximum number of hits per page returned by Algolia.
diff --git a/node_modules/instantsearch.js/es/types/algoliasearch.d.ts b/node_modules/instantsearch.js/es/types/algoliasearch.d.ts
index d1e8a36..bfcda46 100644
--- a/node_modules/instantsearch.js/es/types/algoliasearch.d.ts
+++ b/node_modules/instantsearch.js/es/types/algoliasearch.d.ts
@@ -1,5 +1,10 @@
-import algoliasearch, { SearchClient as SearchClientV4, Client as SearchClientV3, Response as SearchResponseV3, SearchForFacetValues as SearchForFacetValuesV3 } from 'algoliasearch';
-import { SearchResponse as SearchResponseV4, SearchForFacetValuesResponse as SearchForFacetValuesResponseV4 } from '@algolia/client-search';
+import algoliasearch, {
+  // @ts-ignore
+  SearchClient as SearchClientV4,
+  Client as SearchClientV3, Response as SearchResponseV3, SearchForFacetValues as SearchForFacetValuesV3 } from 'algoliasearch';
+import { SearchResponse as SearchResponseV4, SearchForFacetValuesResponse as SearchForFacetValuesResponseV4 }
+// @ts-ignore
+from '@algolia/client-search';
 declare type DummySearchClientV4 = {
     readonly addAlgoliaAgent: (segment: string, version?: string) => void;
 };
diff --git a/node_modules/instantsearch.js/es/widgets/places/places.d.ts b/node_modules/instantsearch.js/es/widgets/places/places.d.ts
index 85185a2..8fada58 100644
--- a/node_modules/instantsearch.js/es/widgets/places/places.d.ts
+++ b/node_modules/instantsearch.js/es/widgets/places/places.d.ts
@@ -1,3 +1,4 @@
+// @ts-ignore
 import { StaticOptions, PlacesInstance, ReconfigurableOptions } from 'places.js';
 import { WidgetFactory } from '../../types';
 declare type PlacesWidgetOptions = {
